""" Lorentz force calculations for Wired.jl
    (c) 2024 ryan@freestatelabs
"""


"""
    lorentz(mesh::Mesh, B::AbstractArray)

Calculate the Lorentz forces acting on a mesh

# Returns
Nx3 `Matrix` containing the force density vectors for each location in the mesh
"""
function lorentz(mesh::Mesh, B::AbstractArray)

    if size(mesh.Jdensity) != size(B)
        error("Size of current density matrix unequal to Bfield matrix.")

    else 

        F = zeros(size(B))

        for i in range(1, size(B)[1])
            F[i,:] = cross(mesh.Jdensity[i,:], B[i,:])
        end
    end

    return F
end


"""
    netload(mesh::Mesh, Fdensity::AbstractArray)

Determine the net force and moment acting on a Mesh

# Returns 
`force::Vector`, `moment::Vector`: 3-length vectors corresponding to the requested outputs
"""
function netload(mesh::Mesh, Fdensity::AbstractArray; centroid=[])

    F = zeros(size(Fdensity))
    M = zeros(size(Fdensity))

    # Calculate the force acting on each element 
    for i in range(1, size(F)[1])
        F[i,:] = Fdensity[i,:] .* mesh.volumes[i]
    end 

    # If the centroid to sum moments about is not given, determine the centroid 
    #   of the mesh
    if length(centroid) != 3
        centroid = mean(mesh.nodes, dims=1)
    end 

    # Calculate the moment generated by the force on each element
    for i in range(1, size(M)[1]) 
        M = cross(mesh.nodes[i,:], F[i,:])
    end

    return sum(F, dims=1), sum(M,dims=1)
end

