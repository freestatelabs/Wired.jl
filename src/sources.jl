""" Custom type definition for Wired.jl
    (c) 2024 ryan@freestatelabs
"""

using StaticArrays

"""
    abstract type Source 

Represents a time-invariant current source that generates a magnetic field
"""
abstract type Source end 


"""
    struct Wire <: Source 

Represents a finite wire segment in 3D space 

The wire segment has a finite radius, such that numerical singularities are 
prevented: the magnetic field generated by the wire segment has a finite (maximum)
value on the surface at r=R, and decays linearly to zero at the center with r=0.

# Fields 
- `a0::Vector{Float64}`: XYZ coordinates of the start of the wire vector
- `a1::Vector{Float64}`: XYZ coordinates of the end of the wire vector 
- `I::Float64`: total current in the filament
- `R::Float64`: radius of the wire segment
"""
struct Wire{T<:AbstractFloat} <: Source
    a0::SVector{3, T}
    a1::SVector{3, T}
    I::T
    R::T

    # Constructor converts inputs to StaticVectors
    # Requires specifying a type
    function Wire{T}(a0::Vector{<:Real}, a1::Vector{<:Real}, I::Real, R::Real) where T<:AbstractFloat
        new{T}(SVector{3}(convert.(T, a0)), SVector{3}(convert.(T, a1)), convert(T, I), convert(T, R))
    end

    # Constructor applies Wired.precision by default (convenience method)
    function Wire(a0::Vector{<:Real}, a1::Vector{<:Real}, I::Real, R::Real)
        Wire{precision}(a0, a1, I, R)
    end
end



"""
    abstract type Ring <: Source

A circular current-carrying ring with circular or rectangular-cross-section.

Major axis of the ring is the Z-axis.
"""
abstract type Ring <: Source end 


"""
    struct CircularRing <: Ring

A circular current-carrying solid conducting ring with circular cross-section 

The ring has a defined cross-section, such that numerical singularities are prevented 
and the magnetic field can be accurately calculated within the ring itself.

# Fields 
- `name::String`: describes the filament
- `H::Float64`: distance along the Z-axis of the ring from the coordinate 
    system centroid to the ring centroid
- `R::Float64`: major radius of the ring
- `r::Float64`: minor radius of the ring (cross-section radius)
- `I::Float64`: current in the conducting ring; sign convention follows right-hand 
    rule about primary axis.
"""
struct CircularRing{T<:AbstractFloat} <: Ring 

    name::AbstractString
    H::T
    R::T
    r::T
    I::T

    function CircularRing{T}(name::AbstractString, H::Real, R::Real, r::Real, I::Real) where T<:AbstractFloat 
        new(name, convert(T,H), convert(T,R), convert(T,r), convert(T,I))
    end

    function CircularRing(name::AbstractString, H::Real, R::Real, r::Real, I::Real)
        CircularRing{precision}(name, H, R, r, I)
    end

end


"""
    struct RectangularRing <: Ring  

A circular current-carrying solid conducting ring with rectangular cross-section 

The ring has a defined cross-section, such that numerical singularities are prevented 
and the magnetic field can be accurately calculated within the ring itself.

# Fields 
- `name::String`: describes the filament
- `H::Float64`: distance along the Z-axis of the ring from the coordinate 
    system centroid to the ring centroid
- `R::Float64`: major radius of the ring
- `w::Float64`: width of the ring cross-section 
- `h::Float64`: height of the ring-cross-section
- `I::Float64`: current in the conducting ring; sign convention follows right-hand 
    rule about primary axis.
"""
struct RectangularRing{T<:AbstractFloat} <: Ring 

    name::AbstractString
    H::T
    R::T 
    w::T
    h::T
    I::T

    function RectangularRing{T}(name::AbstractString, H::Real, R::Real, w::Real, h::Real, I::Real) where T<:Real 
        new(name, convert(T,H), convert(T,R), convert(T,w), convert(T,h), convert(T,I))
    end

    function RectangularRing(name::AbstractString, H::Real, R::Real, w::Real, h::Real, I::Real)
        RectangularRing{precision}(name, H, R, w, h, I)
    end

end
